##  -*- python -*-
##  $Id: pingus_main.hxx,v 1.14 2003/10/18 12:11:30 grumbel Exp $
##
##  Pingus - A free Lemmings clone
##  Copyright (C) 1999 Ingo Ruhnke <grumbel@gmx.de>
##
##  This program is free software; you can redistribute it and/or
##  modify it under the terms of the GNU General Public License
##  as published by the Free Software Foundation; either version 2
##  of the License, or (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License
##  along with this program; if not, write to the Free Software
##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

import os

env = Environment(# ENV = {'PKG_CONFIG_PATH' : os.getenv('PKG_CONFIG_PATH')},
                  CC = 'gcc',
                  CCFLAGS = ['-O2', '-Wall', '-Werror', '-g'])
sdl_env = Environment(CC = 'gcc',
                      CCFLAGS = ['-O2', '-Wall', '-Werror', '-g'])

# env.Copy(LIBS = ['a', 'b'])

# FIXME: Make this configurable
# env['ENV']['PKG_CONFIG_PATH'] = '/home/ingo/run/ClanLib-0.8-2005-12-01/lib/pkgconfig/'
# env.ParseConfig('PKG_CONFIG_PATH=/home/ingo/run/ClanLib-0.8-2005-12-01/lib/pkgconfig/ pkg-config --cflags --libs \
#   clanCore-0.8           ">=" 0.8.0 \
#   clanApp-0.8            ">=" 0.8.0 \
#   clanDisplay-0.8        ">=" 0.8.0 \
#   clanGL-0.8             ">=" 0.8.0 \
#   clanSDL-0.8            ">=" 0.8.0 \
#   clanGUI-0.8            ">=" 0.8.0 \
#   clanGUIStyleSilver-0.8 ">=" 0.8.0 \
#   clanSound-0.8          ">=" 0.8.0 \
#   clanVorbis-0.8         ">=" 0.8.0 \
#   clanMikMod-0.8         ">=" 0.8.0')

env.ParseConfig('sdl-config  --cflags --libs')
env['LIBS'] += ['SDL_image', 'physfs']

# sdl_env.ParseConfig('sdl-config  --cflags --libs')
# sdl_env['LIBS'] += ['SDL_image']
# sdl_env.Program('display/scene_test', [
#     'display/scene_graph.cxx',
#     'display/sprite_node.cxx',
#     'display/scene_node.cxx',
#     'math/rect.cpp',
#     'math/origin.cpp',
#     'display/scene_test.cxx'])

env.Program('../pingus', [

# # 'gui/buffer_graphic_context.cxx', 
# # 'indexed_canvas.cxx', 
# # 'input/axes/mouse_axis.cxx', 
# # 'pingus_level_test.cxx', 
# # 'sound/slot_manager.cxx', 
# # 'target_provider.cxx', 
# # 'theme.cxx', 
# # 'theme_selector.cxx', 
# # 'xml_eval.cxx',
    
'action_holder.cxx', 
'actions/angel.cxx', 
'actions/basher.cxx', 
'actions/blocker.cxx', 
'actions/boarder.cxx', 
'actions/bomber.cxx', 
'actions/bridger.cxx', 
'actions/climber.cxx', 
'actions/digger.cxx', 
'actions/drown.cxx', 
'actions/exiter.cxx', 
'actions/faller.cxx', 
'actions/floater.cxx', 
'actions/jumper.cxx', 
'actions/laser_kill.cxx', 
'actions/miner.cxx', 
'actions/rocket_launcher.cxx', 
'actions/slider.cxx', 
'actions/smashed.cxx', 
'actions/splashed.cxx', 
'actions/superman.cxx', 
'actions/teleported.cxx', 
'actions/waiter.cxx', 
'actions/walker.cxx', 
# 'blitter.cxx',
# 'blitter_test.cxx', 
'capture_rectangle.cxx', 
'cheat.cxx', 
'client.cxx', 
'col_map.cxx', 
'collider.cxx', 
'colliders/pingu_collider.cxx', 
'components/action_button.cxx', 
'components/button_panel.cxx', 
'components/hurry_up.cxx', 
'components/pingus_counter.cxx', 
'components/playfield.cxx', 
'components/smallmap.cxx', 
'components/time_display.cxx', 
'config.cxx', 
'console.cxx', 
# 'credits.cxx', 
'debug.cxx', 
'debug_stream.cxx', 
# 'demo_player.cxx', 
'demo_recorder.cxx', 
# 'demo_session.cxx', 
'direction.cxx', 
'display/drawing_context.cxx', 
'display/scene_context.cxx', 

# # 'editor/context_menu.cxx',
# # 'editor/editor_panel.cxx', 
# # 'editor/editor_screen.cxx', 
# # 'editor/editor_viewport.cxx', 
# # 'editor/level_head.cxx', 
# # 'editor/level_objs.cxx', 
# # 'editor/panel_buttons.cxx', 
# # 'editor/xml_level.cxx', 

'command_line.cpp',
'command_line_generic.cpp',

'exit_menu.cxx', 
# 'file_dialog.cxx', 
# 'file_dialog_item.cxx', 
'file_reader.cxx',
'sexpr_file_reader.cpp', 
'fonts.cxx',
'font.cpp',
'sprite.cpp',
# 'fps_counter.cxx', 
# 'game_counter.cxx', 
'game_session.cxx', 
'game_session_result.cxx', 
'game_time.cxx', 
'gettext.cxx', 
# 'global_event.cxx', 
'globals.cxx', 
'goal_manager.cxx', 
'graphic_context_state.cxx', 
'groundtype.cxx', 
# 'gui/checkbox.cxx',
# 'gui/combobox.cxx', 
# 'gui/cursor.cxx', 
'gui/display.cxx', 
'gui/gui_manager.cxx', 
'gui/gui_screen.cxx', 
# 'gui/input_box.cxx', 
# 'gui/input_debug_screen.cxx', 
'gui/root_gui_manager.cxx', 
'gui/screen.cxx', 
'gui/screen_manager.cxx', 
'gui/screen_ptr.cxx', 
'gui/surface_button.cxx',

'lisp/getters.cpp',
'lisp/lexer.cpp',
'lisp/lisp.cpp',
'lisp/parser.cpp',
'lisp/properties.cpp',
'lisp/writer.cpp',

# # 'input/axes/button_axis.cxx', 
# # 'input/axes/inverted_axis.cxx', 
# # 'input/axes/joystick_axis.cxx', 
# # 'input/axes/multiple_axis.cxx', 
# # 'input/axis_factory.cxx', 
# # 'input/button_factory.cxx', 
# # 'input/buttons/double_button.cxx', 
# # 'input/buttons/joystick_button.cxx', 
# # 'input/buttons/key_button.cxx', 
# # 'input/buttons/mouse_button.cxx', 
# # 'input/buttons/multiple_button.cxx', 
# # 'input/buttons/triple_button.cxx', 
'input/controller.cxx', 
# # 'input/pointer_factory.cxx', 
# # 'input/pointers/axis_pointer.cxx', 
# # 'input/pointers/mouse_pointer.cxx', 
# # 'input/pointers/multiple_pointer.cxx', 
# # 'input/scroller_factory.cxx', 
# # 'input/scrollers/axis_scroller.cxx', 
# # 'input/scrollers/inverted_scroller.cxx', 
# # 'input/scrollers/joystick_scroller.cxx', 
# # 'input/scrollers/mouse_scroller.cxx', 
# # 'input/scrollers/multiple_scroller.cxx', 
# # 'input/scrollers/pointer_scroller.cxx', 

'layer_manager.cxx', 
# 'level_interrupt.cxx', 
# 'loading.cxx', 
'components/menu_button.cxx', 
'mover.cxx', 
'movers/linear_mover.cxx', 
'multiline_text.cxx', 
'particles/explosive_particle.cxx', 
'particles/ground_particle.cxx', 
'particles/pingu_particle_holder.cxx', 
'particles/rain_particle_holder.cxx', 
'particles/smoke_particle_holder.cxx', 
'particles/snow_particle_holder.cxx', 
'path_manager.cxx', 
'pingu.cxx', 
'pingu_action.cxx', 
'pingu_action_factory.cxx', 
'pingu_enums.cxx', 
'pingu_holder.cxx', 
'pingus_error.cxx', 
'pingus_level.cxx', 
'pingus_main.cxx', 
# 'pingus_map_manager.cxx', 
'pingus_menu.cxx', 
'pingus_menu_manager.cxx', 
'pingus_sub_menu.cxx', 
'plf_res_mgr.cxx', 
# 'plt_xml.cxx', 
# 'preview_renderer.cxx', 
# 'range.cxx', 
'res_descriptor.cxx', 
'resource.cxx',
'resource_manager.cpp', 
'resource_modifier.cxx', 
'result_screen.cxx', 
'savegame.cxx', 
'savegame_manager.cxx', 
# 'screenshot.cxx', 
'server.cxx', 
'server_event.cxx', 
'smallmap_image.cxx', 
'sound/sound.cxx', 
'sound/sound_dummy.cxx', 
# 'sound/sound_real.cxx', 
'sound/sound_res_mgr.cxx', 
'ground_map.cxx', 
'start_screen.cxx', 
'stat_manager.cxx', 
'state_sprite.cxx', 
# 'story_screen.cxx', 
'string_format.cxx',
'math/origin.cpp',
'math/rect.cpp',
'system.cxx', 
'timer.cxx', 
'tinygettext/tinygettext.cxx', 
'true_server.cxx', 
'math/vector2f.cpp',
'math/vector2i.cpp',
'math/vector3f.cpp',
'physfs/physfs_sdl.cpp',
'physfs/physfs_stream.cpp',
'world.cxx', 

'worldmap/dot.cxx', 
'worldmap/dot_factory.cxx', 
'worldmap/drawable.cxx', 
'worldmap/drawable_factory.cxx', 
'worldmap/graph.cxx', 
'worldmap/level_dot.cxx', 
'worldmap/manager.cxx', 
'worldmap/metamap.cxx', 
'worldmap/path.cxx', 
'worldmap/path_drawable.cxx', 
'worldmap/path_graph.cxx', 
'worldmap/pingus.cxx', 
'worldmap/sprite_drawable.cxx', 
'worldmap/surface_drawable.cxx', 
'worldmap/world_dot.cxx', 
'worldmap/worldmap.cxx', 
'worldmap/worldmap_story.cxx', 
'worldobj.cxx', 
'worldobj_factory.cxx', 
'worldobjs/conveyor_belt.cxx', 
'worldobjs/entrance.cxx', 
'worldobjs/exit.cxx', 
'worldobjs/fake_exit.cxx', 
'worldobjs/groundpiece.cxx', 
'worldobjs/guillotine.cxx', 
'worldobjs/hammer.cxx', 
'worldobjs/hotspot.cxx', 
'worldobjs/ice_block.cxx', 
'worldobjs/info_box.cxx', 
'worldobjs/laser_exit.cxx', 
'worldobjs/liquid.cxx', 
'worldobjs/rain_generator.cxx', 
'worldobjs/smasher.cxx', 
'worldobjs/snow_generator.cxx', 
'worldobjs/solid_color_background.cxx', 
'worldobjs/spike.cxx', 
'worldobjs/starfield_background.cxx', 
'worldobjs/starfield_background_stars.cxx', 
'worldobjs/surface_background.cxx', 
'worldobjs/switch_door.cxx', 
'worldobjs/teleporter.cxx', 
'worldobjs/thunderstorm_background.cxx', 
'worldobjs/woodthing.cxx',

# 'xml_file_reader.cxx', 
# 'xml_file_writer.cxx', 
# 'xml_pdf.cxx', 
# 'xml_pingus_level.cxx'
],
LIBS    = env['LIBS'],
LIBPATH = env['LIBPATH'],
CPPPATH = env['CPPPATH'] + ['..'] + ['.'])

## EOF ##
