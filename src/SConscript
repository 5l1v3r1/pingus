##  -*- python -*-
##  $Id: pingus_main.hxx,v 1.14 2003/10/18 12:11:30 grumbel Exp $
##
##  Pingus - A free Lemmings clone
##  Copyright (C) 1999 Ingo Ruhnke <grumbel@gmx.de>
##
##  This program is free software; you can redistribute it and/or
##  modify it under the terms of the GNU General Public License
##  as published by the Free Software Foundation; either version 2
##  of the License, or (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License
##  along with this program; if not, write to the Free Software
##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

import os

env = Environment(# ENV = {'PKG_CONFIG_PATH' : os.getenv('PKG_CONFIG_PATH')},
                  CC = 'gcc',
                  CCFLAGS = ['-O0', '-Wall', '-Werror', '-g'])
sdl_env = Environment(CC = 'gcc',
                      CCFLAGS = ['-O2', '-Wall', '-Werror', '-g'])

# env.Copy(LIBS = ['a', 'b'])

# FIXME: Make this configurable
# env['ENV']['PKG_CONFIG_PATH'] = '/home/ingo/run/ClanLib-0.8-2005-12-01/lib/pkgconfig/'
# env.ParseConfig('PKG_CONFIG_PATH=/home/ingo/run/ClanLib-0.8-2005-12-01/lib/pkgconfig/ pkg-config --cflags --libs \
#   clanCore-0.8           ">=" 0.8.0 \
#   clanApp-0.8            ">=" 0.8.0 \
#   clanDisplay-0.8        ">=" 0.8.0 \
#   clanGL-0.8             ">=" 0.8.0 \
#   clanSDL-0.8            ">=" 0.8.0 \
#   clanGUI-0.8            ">=" 0.8.0 \
#   clanGUIStyleSilver-0.8 ">=" 0.8.0 \
#   clanSound-0.8          ">=" 0.8.0 \
#   clanVorbis-0.8         ">=" 0.8.0 \
#   clanMikMod-0.8         ">=" 0.8.0')

env.ParseConfig('sdl-config  --cflags --libs')
env['LIBS'] += ['SDL_image', 'SDL_mixer', 'physfs']

# sdl_env.ParseConfig('sdl-config  --cflags --libs')
# sdl_env['LIBS'] += ['SDL_image']
# sdl_env.Program('display/scene_test', [
#     'display/scene_graph.cxx',
#     'display/sprite_node.cxx',
#     'display/scene_node.cxx',
#     'math/rect.cpp',
#     'math/origin.cpp',
#     'display/scene_test.cxx'])

env.Program('../pingus', [

# # 'gui/buffer_graphic_context.cpp', 
# # 'indexed_canvas.cpp', 
# # 'input/axes/mouse_axis.cpp', 
# # 'pingus_level_test.cpp', 
# # 'sound/slot_manager.cpp', 
# # 'target_provider.cpp', 
# # 'theme.cpp', 
# # 'theme_selector.cpp', 
# # 'xml_eval.cpp',
    
'action_holder.cpp', 
'actions/angel.cpp', 
'actions/basher.cpp', 
'actions/blocker.cpp', 
'actions/boarder.cpp', 
'actions/bomber.cpp', 
'actions/bridger.cpp', 
'actions/climber.cpp', 
'actions/digger.cpp', 
'actions/drown.cpp', 
'actions/exiter.cpp', 
'actions/faller.cpp', 
'actions/floater.cpp', 
'actions/jumper.cpp', 
'actions/laser_kill.cpp', 
'actions/miner.cpp', 
'actions/rocket_launcher.cpp', 
'actions/slider.cpp', 
'actions/smashed.cpp', 
'actions/splashed.cpp', 
'actions/superman.cpp', 
'actions/teleported.cpp', 
'actions/waiter.cpp', 
'actions/walker.cpp', 
'blitter.cpp',
# 'blitter_test.cpp', 
'capture_rectangle.cpp', 
'cheat.cpp', 
'client.cpp', 
'col_map.cpp', 
'collider.cpp', 
'colliders/pingu_collider.cpp', 
'components/action_button.cpp', 
'components/button_panel.cpp', 
'components/hurry_up.cpp', 
'components/pingus_counter.cpp', 
'components/playfield.cpp', 
'components/smallmap.cpp', 
'components/time_display.cpp', 
'config.cpp', 
'console.cpp', 
'credits.cpp', 
'debug.cpp', 
'debug_stream.cpp', 
# 'demo_player.cpp', 
'demo_recorder.cpp', 
# 'demo_session.cpp', 
'direction.cpp', 
'display/drawing_context.cpp', 
'display/scene_context.cpp', 

'editor/context_menu.cpp',
'editor/editor_panel.cpp', 
'editor/editor_screen.cpp', 
'editor/editor_viewport.cpp', 
'editor/level_head.cpp', 
'editor/level_objs.cpp', 
'editor/panel_buttons.cpp', 
'editor/xml_level.cpp', 

'command_line.cpp',
'command_line_generic.cpp',

'pixel_buffer.cpp',
'collision_mask.cpp',

'exit_menu.cpp', 
'file_dialog.cpp', 
'file_dialog_item.cpp', 
'file_reader.cpp',
'sexpr_file_reader.cpp', 
'sexpr_file_writer.cpp', 
'fonts.cpp',
'font.cpp',
'font_description.cpp',
'sprite.cpp',
'fps_counter.cpp', 
'game_session.cpp', 
'game_session_result.cpp', 
'game_time.cpp', 
'gettext.cpp', 
# 'global_event.cpp', 
'globals.cpp', 
'goal_manager.cpp', 
'graphic_context_state.cpp', 
'groundtype.cpp', 
'gui/checkbox.cpp',
'gui/combobox.cpp', 
'gui/cursor.cpp', 
'gui/display.cpp', 
'gui/gui_manager.cpp', 
'gui/gui_screen.cpp', 
'gui/input_box.cpp', 
# 'gui/input_debug_screen.cpp', 
'gui/root_gui_manager.cpp', 
'gui/screen.cpp', 
'gui/screen_manager.cpp', 
'gui/screen_ptr.cpp', 
'gui/surface_button.cpp',

'lisp/getters.cpp',
'lisp/lexer.cpp',
'lisp/lisp.cpp',
'lisp/parser.cpp',
'lisp/properties.cpp',
'lisp/writer.cpp',

'input/axes/button_axis.cpp', 
'input/axes/inverted_axis.cpp', 
'input/axes/joystick_axis.cpp', 
'input/axes/multiple_axis.cpp', 
'input/axis_factory.cpp', 
'input/button_factory.cpp', 
'input/buttons/double_button.cpp', 
'input/buttons/joystick_button.cpp', 
'input/buttons/key_button.cpp', 
'input/buttons/mouse_button.cpp', 
'input/buttons/multiple_button.cpp', 
'input/buttons/triple_button.cpp', 
'input/controller.cpp', 
'input/pointer_factory.cpp', 
'input/pointers/axis_pointer.cpp', 
'input/pointers/mouse_pointer.cpp', 
'input/pointers/multiple_pointer.cpp', 
'input/scroller_factory.cpp', 
'input/scrollers/axis_scroller.cpp', 
'input/scrollers/inverted_scroller.cpp', 
'input/scrollers/joystick_scroller.cpp', 
'input/scrollers/mouse_scroller.cpp', 
'input/scrollers/multiple_scroller.cpp', 
'input/scrollers/pointer_scroller.cpp', 

'layer_manager.cpp', 
'components/menu_button.cpp', 
'mover.cpp', 
'movers/linear_mover.cpp', 
'multiline_text.cpp', 
'particles/explosive_particle.cpp', 
'particles/ground_particle.cpp', 
'particles/pingu_particle_holder.cpp', 
'particles/rain_particle_holder.cpp', 
'particles/smoke_particle_holder.cpp', 
'particles/snow_particle_holder.cpp', 
'path_manager.cpp', 
'pingu.cpp', 
'pingu_action.cpp', 
'pingu_action_factory.cpp', 
'pingu_enums.cpp', 
'pingu_holder.cpp', 
'pingus_error.cpp', 
'pingus_level.cpp', 
'pingus_main.cpp', 
'pingus_menu.cpp', 
'pingus_menu_manager.cpp', 
'pingus_sub_menu.cpp', 
'plf_res_mgr.cpp', 
# 'plt_xml.cpp', 
# 'preview_renderer.cpp', 
'res_descriptor.cpp', 
'resource.cpp',
'resource_manager.cpp', 
'resource_modifier.cpp', 
'result_screen.cpp', 
'savegame.cpp', 
'savegame_manager.cpp', 
# 'screenshot.cpp', 
'server.cpp', 
'server_event.cpp', 
'smallmap_image.cpp', 
'sound/sound.cpp', 
'sound/sound_dummy.cpp', 
'sound/sound_real.cpp', 
'sound/sound_res_mgr.cpp', 
'ground_map.cpp', 
'start_screen.cpp', 
'stat_manager.cpp', 
'state_sprite.cpp', 
'story_screen.cpp', 
'string_format.cpp',
'string_util.cpp',
'math/origin.cpp',
'math/rect.cpp',
'system.cpp', 
'timer.cpp', 
'tinygettext/tinygettext.cpp', 
'true_server.cpp', 
'math/vector2f.cpp',
'math/vector2i.cpp',
'math/vector3f.cpp',
'physfs/physfs_sdl.cpp',
'physfs/physfs_stream.cpp',
'world.cpp', 

'worldmap/dot.cpp', 
'worldmap/dot_factory.cpp', 
'worldmap/drawable.cpp', 
'worldmap/drawable_factory.cpp', 
'worldmap/graph.cpp', 
'worldmap/level_dot.cpp', 
'worldmap/manager.cpp', 
'worldmap/metamap.cpp', 
'worldmap/path.cpp', 
'worldmap/path_drawable.cpp', 
'worldmap/path_graph.cpp', 
'worldmap/pingus.cpp', 
'worldmap/sprite_drawable.cpp', 
'worldmap/surface_drawable.cpp', 
'worldmap/world_dot.cpp', 
'worldmap/worldmap.cpp', 
'worldmap/worldmap_story.cpp', 
'worldobj.cpp', 
'worldobj_factory.cpp', 
'worldobjs/conveyor_belt.cpp', 
'worldobjs/entrance.cpp', 
'worldobjs/exit.cpp', 
'worldobjs/fake_exit.cpp', 
'worldobjs/groundpiece.cpp', 
'worldobjs/guillotine.cpp', 
'worldobjs/hammer.cpp', 
'worldobjs/hotspot.cpp', 
'worldobjs/ice_block.cpp', 
'worldobjs/info_box.cpp', 
'worldobjs/laser_exit.cpp', 
'worldobjs/liquid.cpp', 
'worldobjs/rain_generator.cpp', 
'worldobjs/smasher.cpp', 
'worldobjs/snow_generator.cpp', 
'worldobjs/solid_color_background.cpp', 
'worldobjs/spike.cpp', 
'worldobjs/starfield_background.cpp', 
'worldobjs/starfield_background_stars.cpp', 
'worldobjs/surface_background.cpp', 
'worldobjs/switch_door.cpp', 
'worldobjs/teleporter.cpp', 
'worldobjs/thunderstorm_background.cpp', 
'worldobjs/woodthing.cpp',

# 'xml_file_reader.cpp', 
# 'xml_file_writer.cpp', 
# 'xml_pdf.cpp', 
# 'xml_pingus_level.cpp'
],
LIBS    = env['LIBS'],
LIBPATH = env['LIBPATH'],
CPPPATH = env['CPPPATH'] + ['..'] + ['.'])

## EOF ##
